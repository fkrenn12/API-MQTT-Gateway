services:
  api:
    build: ./api
    container_name: api
    restart: always
    stdin_open: true # docker run -i
    tty: true        # docker run -t
    environment:
      - PRODUCTION=True
      - PERSISTENT_CONFIG_FILENAME="config.std"
    # ports:
    #  - '${API_STD_PORT}:${API_STD_PORT}'
    volumes:
      # TODO synchronize with Dockerized-Web-Framework
      # - ./api:/usr/src/app:ro
      - ./.env:/usr/src/.env:ro
      - /etc/localtime:/etc/localtime
      - ./.apimqtt_gateway/config:/usr/src/app/config
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`${SUBDOMAIN_API}${DOMAIN}`)"
      - "traefik.http.routers.api.entrypoints=websecure"
      - "traefik.http.services.api.loadbalancer.server.port=${API_STD_PORT}"
      - "traefik.http.routers.api.tls.certresolver=letsencrypt"
    networks:
      - backnet
    command:
      - /bin/sh
      - -c
      - |
        cd /usr/src/app
        uvicorn main:app --host "0.0.0.0" --port ${API_STD_PORT} --proxy-headers

  traefik:
    build:
      context: ./.traefik
      dockerfile: Dockerfile
    container_name: traefik
    ports:
      - 80:80
      - 443:443
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./.traefik/public-certificates:/certificates"
    command:
      - "--certificatesresolvers.letsencrypt.acme.email=${EMAIL})"
      - "--certificatesresolvers.letsencrypt.acme.tlschallenge=true"
      - "--providers.docker=true"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=Host(`${SUBDOMAIN_TRAEFIK_DASH}${DOMAIN}`) && (PathPrefix(`/`))"
      - "traefik.http.routers.traefik.entrypoints=websecure"
      - "traefik.http.routers.traefik.tls.certresolver=letsencrypt"
      - "traefik.http.routers.traefik.service=api@internal"
      - "traefik.http.routers.traefik.middlewares=basic-auth-global"
      # Passwort Diplomarbeit_2024
      - "traefik.http.middlewares.basic-auth-global.basicauth.users=admin:$$2y$$05$$gY5Uot31ZdYJVqxCJ.YEdu0JE86dBh0SM3INin0xEPCrMudc3rrMi"
    networks:
      - backnet

networks:
  backnet:

volumes:
  api_mqtt_gateway_config:

